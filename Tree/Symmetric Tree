**********Problem**********
Leetcode question number: 101
Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).

For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

    1
   / \
  2   2
 / \ / \
3  4 4  3

**********Solution**********
class Solution {
    public boolean isSymmetric(TreeNode root) {
        
        if(root==null)
            return true;
        return helper(root.left,root.right);
    }
    public boolean helper(TreeNode p1,TreeNode p2)
    {
        if(p1==null && p2==null)
            return true;
        if(p1==null || p2==null)
            return false;
        if(p1.val!=p2.val)
            return false;
        return helper(p1.left,p2.right) && helper(p1.right, p2.left);
    }
}
