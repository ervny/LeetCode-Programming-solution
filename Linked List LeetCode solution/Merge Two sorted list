**********Problem**********
Leetcode number :21
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

**********Solution**********
Recusive approach:
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null)
            return l2;
        if(l2==null)
            return l1;
        ListNode temp;
        if(l1.val<l2.val)
        {
            temp=l1;
            temp.next=mergeTwoLists(l1.next,l2);
        }
        else
        {
            temp=l2;
           temp.next= mergeTwoLists(l1,l2.next);
        }
        return temp;      
    }
}
********************************
Iterative approach
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        if(l1==null)
            return l2;
        if(l2==null)
            return l1;
        ListNode dummy=new ListNode(0);
        ListNode l=dummy;
        while(l1!=null && l2!=null)
        {
            if(l1.val<=l2.val)
            {
                l.next=new ListNode(l1.val);
                l1=l1.next;
                l=l.next;
            }
            else
            {
                l.next=new ListNode(l2.val);
                l2=l2.next;
                l=l.next;
            }
        }
        
        while(l1!=null)
        {
            l.next=new ListNode(l1.val);
            l1=l1.next;
            l=l.next;
        }
        while(l2!=null)
        {
            l.next=new ListNode(l2.val);
            l2=l2.next;
            l=l.next;
        }
        return dummy.next;
    }
}
